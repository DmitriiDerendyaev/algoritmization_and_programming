#include <iostream>//подключение необходимых библиотек

using namespace std;//определение пространства имен

int main()  
{
    int N = 7, j, i, buf, min;//подготовка необходимых переменных, в том числе размера массива, параметров циклов, буферных переменных и индекса минимального элемента
    int mas[] = { 6, 2, 1, 10, 3, 7, 4 };//объявление массива

    for (i = 0; i < N - 1; i++) //начало цикла прохода по всему массиву от первого элемента до последнего с индексом N-1
    {
        for (j = i + 1, min = i; j < N; j++) //начало вложенного цикла поиска индекса минимального элемента в неотсортированной части массива
        {
            if (mas[j] < mas[min])//анализ(сравнение) значения текущего элемента со значением минимального элемена неотсортированной части массива
                min = j;//присваивание переменной min индекс минимального значения неотсортированной части массива
        }
        buf = mas[i];//производение обмена значений переменных, используя буферную переменную buf
        mas[i] = mas[min];
        mas[min] = buf;
    }    

    for (int i = 0; i < N; i++)//выводим массив на экран
    {
        cout << mas[i] << ' ';
    }
    cout << endl << endl;
    
    //-------------------------------------------------
    int mas2[] = { 6, 5, 1, 15, 3, 2, 4 };//объявление массива
    int n, nte, min2, temp, gr = 0;//подготовка необходимых переменных, в том числе размера массива, параметров циклов, буферных переменных и индекса минимального элемента

    n = sizeof(mas2) / sizeof(int);//определение размера массива

    while (gr < n - 1)//начало цикла прохода по всему массиву от первого элемента до последнего с индексом N-1
    {
        min2 = gr;//присваивание переменной min индекса первого элемента на данном этапе
        nte = gr + 1;//номер текущего элмента равен границе исследуемого массива + 1(для альнейшего анализа)
        while (nte < n)//вложенный цикл будет выполняться, пока номер текущего элемента меньше размера самого массива
        {
            if (mas2[min2] > mas2[nte])//сравнение значений текущего элемента и значения элемента неотсортированной части(увеличение до тех пор, пока не закончится массив)
            {
                min2 = nte;//рписваивание переменной min2 номер аминимального элемента
            }
            nte++;//(увеличение номера текущего элемента до тех пор, пока не закончится массив)
        }
        temp = mas2[gr];//производение обмена значений переменных, используя буферную переменную buf
        mas2[gr] = mas2[min2];
        mas2[min2] = temp;
        gr++;//продвижение по массиву на шаг вперед
    }

    for (gr = 0; gr < n; gr++)//вывод массива на экран
    {
        cout << mas2[gr] << ' ';
    }
    cout << ' ';

    return 0;//завершение программы
}